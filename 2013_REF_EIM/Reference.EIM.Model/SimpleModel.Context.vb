'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'	 The templated was modified to include custom imports, a different constructor and constants.
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports Reference.EIM.Domain

Partial Public Class SimpleEntities
    Inherits DbContext

	
	Public Const DefaultConnectionStringName as string = "SimpleEntities"

    Public Sub New()
        MyBase.New("name=" & DefaultConnectionStringName )
    End Sub

    ''' <summary>
    ''' Custom Constructor for use with the custom providers.
    ''' </summary>
    ''' <param name="context"></param>
    ''' <remarks></remarks>
    Public Sub New(context As ObjectContext)
        MyBase.New(context, True)
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property Addresses() As DbSet(Of Address)
    Public Property Contacts() As DbSet(Of Contact)
    Public Property vOfficeAddresses() As DbSet(Of vOfficeAddress)

    Public Overridable Function ContactsbyState(statecode As String) As ObjectResult(Of Contact)
        Dim statecodeParameter As ObjectParameter = If(statecode IsNot Nothing, New ObjectParameter("statecode", statecode), New ObjectParameter("statecode", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Contact)("ContactsbyState", statecodeParameter)
    End Function

    Public Overridable Function ContactsbyState(statecode As String, mergeOption As MergeOption) As ObjectResult(Of Contact)
        Dim statecodeParameter As ObjectParameter = If(statecode IsNot Nothing, New ObjectParameter("statecode", statecode), New ObjectParameter("statecode", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Contact)("ContactsbyState", mergeOption, statecodeParameter)
    End Function

End Class
